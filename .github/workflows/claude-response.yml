name: Claude Issue Response

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  claude-response:
    if: contains(github.event.issue.body, '@claude') || contains(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install @anthropic-ai/sdk
        
    - name: Process Claude Request
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body || github.event.comment.body }}
      run: |
        cat > claude_processor.js << 'EOF'
        const Anthropic = require('@anthropic-ai/sdk');
        const fs = require('fs');
        
        const anthropic = new Anthropic({
          apiKey: process.env.ANTHROPIC_API_KEY,
        });
        
        async function processRequest() {
          try {
            if (!process.env.ANTHROPIC_API_KEY) {
              console.log("CLAUDE_RESPONSE:‚ùå ANTHROPIC_API_KEY secret is not configured. Please add it in repository settings > Secrets and variables > Actions.");
              return;
            }
            
            const issueBody = process.env.ISSUE_BODY;
            const issueTitle = process.env.ISSUE_TITLE;
            const issueNumber = process.env.ISSUE_NUMBER;
            
            // Read the current code files
            let mainPy = '';
            try {
              mainPy = fs.readFileSync('main.py', 'utf8');
            } catch (e) {
              console.log('Could not read main.py:', e.message);
            }
            
            const prompt = `You are Claude, an AI assistant helping with code optimization. A user has created a GitHub issue requesting help.
            
        Issue Title: ${issueTitle}
        Issue Description: ${issueBody}
        
        Current main.py content:
        \`\`\`python
        ${mainPy}
        \`\`\`
        
        Please analyze the request and provide a helpful response. If they're asking for code optimization, suggest specific improvements. If they want you to make changes, provide the optimized code.
        
        Keep your response concise and actionable. Format code suggestions in proper markdown code blocks.`;
        
            const message = await anthropic.messages.create({
              model: "claude-3-5-sonnet-20241022",
              max_tokens: 2000,
              messages: [{
                role: "user",
                content: prompt
              }]
            });
            
            const response = message.content[0].text;
            console.log("CLAUDE_RESPONSE:" + response);
            
            // Write response to file for next step
            fs.writeFileSync('claude_response.txt', response);
            
          } catch (error) {
            console.error('Error calling Claude API:', error);
            console.log("CLAUDE_RESPONSE:Sorry, I encountered an error processing your request: " + error.message);
          }
        }
        
        processRequest();
        EOF
        
        node claude_processor.js
        
    - name: Post Claude Response
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            // Read Claude's response from file
            let claudeResponse = '';
            try {
              claudeResponse = fs.readFileSync('claude_response.txt', 'utf8');
            } catch (e) {
              console.log('No response file found, checking console output');
              // Fallback - this might not work reliably
              claudeResponse = 'Failed to get Claude response. Please check the workflow logs.';
            }
            
            if (claudeResponse && claudeResponse.trim()) {
              const comment = `ü§ñ **Claude Response:**

${claudeResponse}

---
*This response was generated automatically by Claude via GitHub Actions.*`;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ùå Failed to get response from Claude. Please check the ANTHROPIC_API_KEY secret configuration and workflow logs."
              });
            }
          } catch (error) {
            console.error('Error posting comment:', error);
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "‚ùå Error posting Claude response: " + error.message
            });
          }